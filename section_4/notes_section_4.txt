# Section 4th: Working with control structures

## Conditional statements
    Conditional code execution allow to alter the linear and top to buttom flow of a program and create diferent path execution outcomes depending on certain conditions defined in the conditional statements.


    A conditional statement is defined by the key word if and a sentence that should return true or false. If the returned value is true the code that will be executed is inside the if block  { } in JS, and if the result is false the program will skip the if block execution {}.

    in js there is an aditional distinction in the comparisson symbols
    if you use == checks for value only
    if you use === checks for value and type. Always recomended.

    In the calculator project it is shown how the if else statements and a refactor
    allowed to clean the code make it reusable and way much better to understand

    see commit: 8887d4c35bef1b14fef93f7007fb9beebca6f42b

    ## Falsy and truthy values

    In JS sometimes you evaluate expresions that are not just boolean values but still can produce a result in a conditional statement. This is because the conditionals in Javascript also evaluate for truthy or falsy values.

    This happens becase it gives the possibility to check the validity of an expresion or variable with out adding more operatiors like checking the type. for example:

    Assume a variable  name = "max" and a conditional if(name). Because there is no logic operator in place the only question that can be answer in the if statement is if the value of name is valid or not or if it is at least not false value.

    Same happen with falsy values such as 0 => false.
    falsy values:
        * 0
        * ""
        * null undefined NaN

    ### note in Statement and expresions
        * expresion is something that yields a value that can be stored in a constant or a variable. It is something that goes to the rigth of the equal sign.
        * statement
    ### switch
        it is useful when the if else if else conditionals holds strict and somilar ocnditions depending in one single variable.

## Loops in JS
    * For:
        Execute the code inside the curly brackets a certain amount of thimes defined with some rule in the header of the for.
        for (let i=0; i < 3; i++){
            console.log(test)
        }
    * for of Loops
       is a shorthand of Foor loop in order to work with elements of an input array defined in the for of header.
    *for in loops
        Same as for of but to work with objects and easily query information form the object based on the key values.
    * while
        excecute code as log as a conditionis tre

## Error handling.
    control structure to handle different circustances typically undered.

    * type of errors:
        ** User input Error
            solved by front end and back end validations
        ** network errors
            handled by Http error responses
        ** error handling intentionally that are beyoun our developer control such as network or unkown beheavior of the user or calculation.
            try catch.
                allow to create custom errors.

    commit d057aea7fcb5d8d88f6777c541ebef34dded274f
